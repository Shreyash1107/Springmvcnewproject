package org.controller;

import java.io.IOException;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.model.DepartmentModel;
import org.service.DepartmentService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
public class DepartmentController {

    @Autowired
    DepartmentService deptservice;

    @RequestMapping(value = "/department", method = RequestMethod.GET)
    public String getDepartmentPage(Map<String, Object> map) {
        List<DepartmentModel> deptlist = deptservice.getdept();
        map.put("deptlist", deptlist);
        return "Department";
    }

    @RequestMapping(value = "/department", method = RequestMethod.POST)
    public String saveDepartment(DepartmentModel deptmodel, Map<String, Object> map) {
        deptmodel.setDept_name(deptmodel.getDept_name().trim().toUpperCase()); 
        boolean b = deptservice.isDepartmentAded(deptmodel);
        if (b) {
            map.put("message", "Department has been successfully added.");
        } else {
            map.put("message", "Department already exists.");
        }

        List<DepartmentModel> deptlist = deptservice.getdept();
        map.put("deptlist", deptlist);

        return "Department";
    }

    @RequestMapping(value = "/delete")
    public String deleteDepartment(@RequestParam("dept_id") Integer dept_id, Map<String, Object> map) {
        deptservice.isDepartmentdeleted(dept_id);
        List<DepartmentModel> deptlist = deptservice.getdept();
        map.put("deptlist", deptlist);
        return "Department";
    }

    @RequestMapping(value = "/update", method = RequestMethod.GET)
    public String updateDepartment(@RequestParam("dept_id") Integer deptid, @RequestParam("dept_name") String name, Map<String, Object> map) {
        List<DepartmentModel> deptlist = deptservice.getdept();
        map.put("deptlist", deptlist);
        map.put("deptid", deptid);
        map.put("deptname", name);
        map.put("showTable", false); 
        return "Updatedept";
    }

    @RequestMapping(value = "/finalupdate", method = RequestMethod.POST)
    public String getupdateddept(HttpServletRequest req, HttpServletResponse response, DepartmentModel dmodel, Map<String, Object> map) throws IOException {
        // Get the department ID and name from the request and ensure it's trimmed and uppercase
        int dept_id = Integer.parseInt(req.getParameter("dept_id"));
        String dept_name = req.getParameter("dept_name").toUpperCase().trim(); 
        dmodel.setDept_id(dept_id);
        dmodel.setDept_name(dept_name);
        boolean isUpdated = deptservice.isupdateDepartment(dmodel);
        
        if (isUpdated) {
            List<DepartmentModel> list = deptservice.getdept();
            map.put("deptlist", list);
            map.put("message", "Department updated successfully.");
            map.put("showTable", true);
        } else {
            map.put("message", "Failed to update the department. Department name already exists.");
            map.put("showTable", false);
        }
        
        // Return the view name
        return "Updatedept";
    }

}
