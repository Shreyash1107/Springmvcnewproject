package org.repository;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import org.model.DepartmentModel;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.PreparedStatementSetter;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;

@Repository("deptrepo")
public class DepartmentRespositoryImpl implements Departmentrepository {

    @Autowired
    JdbcTemplate template;

    @Override
    public boolean isDepartmentAded(DepartmentModel dmodel) {
        // Check if department already exists
        String checkSql = "SELECT COUNT(*) FROM department WHERE LOWER(deptname) = LOWER(?)";
        int count = template.queryForObject(checkSql, new Object[] { dmodel.getDept_name() }, Integer.class);

        if (count > 0) {
            System.out.println("Department already exists.");
            return false;
        }

        // Insert new department
        String insertSql = "INSERT INTO department (deptname) VALUES (?)";
        PreparedStatementSetter pstmt = ps -> ps.setString(1, dmodel.getDept_name());
        int val = template.update(insertSql, pstmt);
        System.out.println("Insert operation result: " + val);

        return val > 0;
    }

    @Override
    public List<DepartmentModel> getdept() {
        RowMapper<DepartmentModel> rmap = (rs, rowNum) -> {
            DepartmentModel dmodel = new DepartmentModel();
            dmodel.setDept_id(rs.getInt(1));
            dmodel.setDept_name(rs.getString(2));
            return dmodel;
        };

        String sql = "SELECT * FROM department ORDER BY dept_id ASC";
        List<DepartmentModel> deptlist = template.query(sql, rmap);
        return deptlist;
    }

    @Override
    public void isDepartmentdeleted(int dept_id) {
        template.update("DELETE FROM department WHERE dept_id = ?", dept_id);
        System.out.println("Deleted Department with ID: " + dept_id);
    }

    @Override
    public boolean isupdateDepartment(DepartmentModel deptmodel) {
        String updateSql = "UPDATE department SET deptname = ? WHERE dept_id = ?";
        int result = template.update(updateSql, ps -> {
            ps.setString(1, deptmodel.getDept_name());
            ps.setInt(2, deptmodel.getDept_id());
        });

        System.out.println("Update operation result: " + result);
        return result > 0;
    }
}
