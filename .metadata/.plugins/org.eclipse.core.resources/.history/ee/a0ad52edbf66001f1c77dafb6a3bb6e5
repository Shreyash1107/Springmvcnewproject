package org.controller;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.model.AlumniModel;
import org.model.BatchModel;
import org.model.DepartmentModel;
import org.service.Alumniservice;
import org.service.Batchservice;
import org.service.DepartmentService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
public class AlumniController {
	@Autowired
	Alumniservice amservice;
	@Autowired
	Batchservice batchservice;
	@Autowired
	DepartmentService deptservice;

	@RequestMapping(value = "/alumni")
	public String getalumnimodel(Model md) {
		List<DepartmentModel> deptname = deptservice.getdept();
		md.addAttribute("dept", deptname);
		List<BatchModel> batches = batchservice.getlist();
		md.addAttribute("b", batches);
		return "Alumnimodule";
	}

	@RequestMapping(value = "/alumniop")
	public String addadlumni(AlumniModel amodel, Model md, HttpServletRequest req) {
	    try {
	        String name = req.getParameter("Name");
	        String email = req.getParameter("Email");
	        String contact = req.getParameter("Contact");
	        String ageStr = req.getParameter("Age");
	        String company = req.getParameter("Company");
	        String gender = req.getParameter("Gender");
	        String deptIdStr = req.getParameter("dept_id");
	        String bidStr = req.getParameter("bid");

	        // Validate required parameters
	        if (name == null || email == null || contact == null || ageStr == null ||
	            company == null || gender == null || deptIdStr == null || bidStr == null ||
	            name.isEmpty() || email.isEmpty() || contact.isEmpty() || ageStr.isEmpty() ||
	            company.isEmpty() || gender.isEmpty() || deptIdStr.isEmpty() || bidStr.isEmpty()) {
	            md.addAttribute("a", "All fields are required.");
	            return "Alumnimodule";
	        }

	        int age = Integer.parseInt(ageStr);
	        int dept_id = Integer.parseInt(deptIdStr);
	        int bid = Integer.parseInt(bidStr);

	        // Set model attributes
	        amodel.setName(name);
	        amodel.setEmail(email);
	        amodel.setContact(contact);
	        amodel.setAge(age);
	        amodel.setCompany(company);
	        amodel.setGender(gender);
	        amodel.setDept_id(dept_id);
	        amodel.setBid(bid);

	        // Perform the addition logic
	        boolean b = amservice.isAlumniadded(amodel);
	        if (b) {
	            md.addAttribute("a", "Alumni Added Successfully.");
	        } else {
	            md.addAttribute("a", "Alumni Not Added Successfully.");
	        }
	    } catch (NumberFormatException e) {
	        md.addAttribute("a", "Invalid input. Please enter correct data.");
	        return "Alumnimodule";
	    }

	    return "Alumnimodule";
	}

}
