package org.controller;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.model.AlumniModel;
import org.model.EventModel;
import org.service.Alumniservice;
import org.service.Eventservice;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
public class EventController {
	@Autowired
	Alumniservice amservice;
	@Autowired
	Eventservice evservice;
	@RequestMapping(value="/events")
	public String geteventmodule(Model md,AlumniModel amodel) {
		List<EventModel> evlist = evservice.getevents();
		if(evlist!=null) {
			md.addAttribute("e", evlist);
		}
		return "Event";
	}
	@RequestMapping(value="/saveevent")
	public String events(EventModel emodel,Model md,HttpServletRequest req) {
		String evname = req.getParameter("Name").trim().toUpperCase();
		String date = req.getParameter("Date");
		String time = req.getParameter("Time");
		emodel.setName(evname);
		emodel.setDate(date);
		emodel.setTime(time);
		boolean b = evservice.isEventAded(emodel);
		if(b) {
			md.addAttribute("ev", "Event has been Added Successfully.............");
		}else {
			md.addAttribute("ev","Event Already Exists");
		}
		List<EventModel> evlist = evservice.getevents();
		if(evlist!=null) {
			md.addAttribute("e", evlist);
		}
		return "Event";
	}
	@RequestMapping(value = "/evreg")
	public String geteventwisealumni(Model md) {
		List<AlumniModel> amlist = amservice.getalumni();
		md.addAttribute("aml", amlist);
		return "alumnievent";
	}
	@RequestMapping(value = "/saveeventalumni")
	public String getalumniwiseevent(@RequestParam("aname")int id,Model md) {
		System.out.println("--------------------->:  "+id);
		List<EventModel> evlist = evservice.getalumniwiselist(id);
		md.addAttribute("al", evlist);
		List<AlumniModel> amlist = amservice.getalumni();
		md.addAttribute("aml", amlist);
		System.out.println(evlist);
		return "alumnievent";
	}
	@RequestMapping(value="/delevent")
	public String removeevent(@RequestParam("Eid")Integer Eid,Model md) {
		evservice.deleteevents(Eid);
		List<EventModel> eventlist = evservice.getevents();
		md.addAttribute("e",eventlist);
		return "Event";
	}
	@RequestMapping(value="/updateevent")
	public String updateevent(Model md,@RequestParam("Eid")Integer Eid,@RequestParam(value = "Name")String Name,@RequestParam(value="Date")String Date,@RequestParam(value = "Time")String Time) {
		List<EventModel> evlist = evservice.getevents();
		md.addAttribute("e",evlist);
		md.addAttribute("Eid",Eid);
		md.addAttribute("Name",Name);
		md.addAttribute("Date",Date);
		md.addAttribute("Time",Time);
		return "Updateevent";
	}
	@RequestMapping(value = "/finalupdateevent", method = RequestMethod.POST)
	public String getupdatedevent(HttpServletRequest req, HttpServletResponse response, EventModel evmd, Map<String, Object> map) throws IOException {
	    Integer Eid = Integer.parseInt(req.getParameter("Eid"));
	    String Name = req.getParameter("Name").trim().toUpperCase();
	    String date = req.getParameter("Date").trim();
	    String time = req.getParameter("Time").trim();

	    // Set the event details in the model
	    evmd.setEid(Eid);
	    evmd.setName(Name);
	    evmd.setDate(date);
	    evmd.setTime(time);

	    // Call the service to check if the event can be updated
	    boolean isUpdated = evservice.isupdateEvent(evmd);

	    if (isUpdated) {
	        // Event updated successfully
	        List<EventModel> eventList = evservice.getevents();
	        map.put("e", eventList);
	        map.put("msg", "Event updated successfully.");
	        map.put("showTable", true); 
	    } else {
	        // Event already exists
	        map.put("msg", "Failed to update the event. The event has already been scheduled.");
	        map.put("showTable", false); 
	    }

	    return "Updateevent";  // Return the name of the JSP page for event updates
	}

}
